package service;

import models.Stop;

import java.util.ArrayList;
import java.util.List;

public abstract class AbstractTicketService implements TicketService {

    public int getDistance(List<Stop> stop, int start, int end) {
        List<Integer> stops = new ArrayList<>();

        boolean inStopList = false;

        for (Stop stoping : stop) {
            if (stoping.getCity() == start) {
                inStopList = true;
            }
            if (inStopList) {
                stops.add(stoping.getCity());
            }
            if (stoping.getCity() == end) {
                break;
            }
        }

        int distance = 0;
        for (int i = 0; i < stops.size() - 1; i++) {
            distance += arrStop(stops.get(i)-1, stops.get(i + 1)-1);
        }
        return distance;
    }

    @Override
    public double getPrice(int distance, String type) {
        double price = 0;
        switch (type) {
            case "Night": {
                price = distance / 5;
                break;
            }
            case "Day": {
                price = distance / 10;
                break;
            }
        }
        return price;
    }


    private int arrStop(int from, int to) {
        final int array[][] = {
                {0, 299, 250, 401, 464, 378, 437, 489, 653, 608, 1042, 793, 949, 928, 1110, 1180, 1448, 935, 1232, 1136, 1172, 1258, 1280, 1438, 1604},
                {299, 0, 134, 285, 289, 134, 138, 245, 429, 364, 798, 569, 705, 684, 866, 936, 1204, 711, 1008, 912, 928, 1014, 1056, 1194, 1360},
                {299, 134, 0, 151, 214, 128, 272, 239, 403, 358, 792, 543, 699, 678, 860, 930, 1198, 685, 982, 886, 922, 1008, 1030, 1188, 1354},
                {450, 285, 151, 0, 73, 228, 402, 267, 262, 386, 820, 402, 570, 700, 882, 952, 1220, 544, 841, 745, 915, 1001, 889, 1181, 1219},
                {513, 289, 214, 73, 0, 155, 329, 194, 189, 313, 747, 329, 497, 627, 809, 879, 1147, 471, 768, 672, 842, 928, 816, 1108, 1146},
                {427, 134, 128, 228, 155, 0, 174, 111, 295, 230, 664, 435, 571, 550, 732, 802, 1070, 577, 874, 778, 794, 880, 922, 1060, 1226},
                {437, 138, 272, 402, 329, 174, 0, 190, 374, 273, 707, 514, 614, 593, 775, 845, 1113, 656, 953, 839, 837, 923, 983, 1103, 1269},
                {538, 245, 239, 267, 194, 111, 190, 0, 184, 119, 553, 324, 460, 439, 621, 691, 959, 466, 763, 667, 683, 769, 811, 949, 1115},
                {702, 429, 403, 262, 189, 295, 374, 184, 0, 150, 584, 140, 308, 438, 620, 690, 958, 282, 579, 483, 653, 739, 627, 919, 957},
                {657, 364, 358, 386, 313, 230, 273, 119, 150, 0, 434, 268, 341, 320, 502, 572, 840, 410, 707, 566, 564, 650, 710, 830, 996},
                {1091, 798, 792, 820, 747, 664, 707, 553, 584, 434, 0, 613, 445, 315, 133, 203, 471, 755, 736, 561, 525, 490, 705, 720, 886},
                {842, 569, 543, 402, 329, 435, 514, 324, 140, 268, 613, 0, 168, 298, 480, 550, 818, 142, 439, 343, 513, 599, 487, 779, 817},
                {998, 705, 699, 570, 497, 571, 614, 460, 308, 341, 445, 168, 0, 130, 312, 382, 650, 310, 409, 234, 374, 460, 378, 640, 708},
                {977, 684, 678, 700, 627, 550, 593, 439, 438, 320, 315, 298, 130, 0, 182, 252, 520, 440, 421, 246, 244, 330, 390, 510, 676},
                {1159, 866, 860, 882, 809, 732, 775, 621, 620, 502, 133, 480, 312, 182, 0, 70, 338, 622, 603, 428, 392, 357, 572, 587, 753},
                {1229, 936, 930, 952, 879, 802, 845, 691, 690, 572, 203, 550, 382, 252, 70, 0, 268, 692, 673, 498, 330, 287, 553, 517, 683},
                {1497, 1204, 1198, 1220, 1147, 1070, 1113, 959, 958, 840, 471, 818, 650, 520, 338, 268, 0, 960, 941, 766, 598, 555, 821, 785, 951},
                {984, 711, 685, 544, 471, 577, 656, 466, 282, 410, 755, 142, 310, 440, 622, 692, 960, 0, 297, 405, 575, 661, 482, 778, 812},
                {1281, 1008, 982, 841, 768, 874, 953, 763, 579, 707, 736, 439, 409, 421, 603, 673, 941, 297, 0, 175, 345, 431, 185, 481, 515},
                {1185, 912, 886, 745, 672, 778, 839, 667, 483, 566, 561, 343, 234, 246, 428, 498, 766, 405, 175, 0, 170, 256, 144, 436, 474},
                {1221, 928, 922, 915, 842, 794, 837, 683, 653, 564, 525, 513, 374, 244, 392, 330, 598, 575, 345, 170, 0, 86, 223, 266, 432},
                {1307, 1014, 1008, 1001, 928, 880, 923, 769, 739, 650, 490, 599, 460, 330, 357, 287, 555, 661, 431, 256, 86, 0, 309, 230, 396},
                {1329, 1056, 1030, 889, 816, 922, 983, 811, 627, 710, 705, 487, 378, 390, 572, 553, 821, 482, 185, 144, 223, 309, 0, 296, 330},
                {1487, 1194, 1188, 1181, 1108, 1060, 1103, 949, 919, 830, 720, 779, 640, 510, 587, 517, 785, 778, 481, 436, 266, 230, 296, 0, 166},
                {1653, 1360, 1354, 1219, 1146, 1226, 1269, 1115, 957, 996, 886, 817, 708, 676, 753, 683, 951, 812, 515, 474, 432, 396, 330, 166, 0}
        };
        return array[from][to];
    }
}